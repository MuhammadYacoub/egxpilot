// stockAnalyzer.js - ูุฑุงุกุฉ ุงููุคุดุฑุงุช ุงููููุฉ ุงูุฌุงูุฒุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุจุฏูุงู ูู ุญุณุงุจูุง ูุญุธููุง
// ูุฐุง ุงูููู ุงูุขู ูุนุชูุฏ ุนูู ุฃู ุงููุคุดุฑุงุช (RSI, MACD, SMA, EMA, Bollinger, ุฅูุฎ) ูุฎุฒูุฉ ูุณุจููุง ูู ุฌุฏูู PriceHistory ุฃู ุฌุฏูู ูููุตู

const { poolPromise } = require("../data/db");

// ุฏุงูุฉ ูุฌูุจ ุขุฎุฑ ุตู ูู PriceHistory ูุน ุงููุคุดุฑุงุช ุงููููุฉ ุงููุฎุฒูุฉ
async function getLatestIndicators(symbol) {
  try {
    const pool = await poolPromise;
    const result = await pool.request()
      .input("symbol", symbol)
      .query(`
        SELECT TOP 1 * FROM PriceHistory
        WHERE Symbol = @symbol
        ORDER BY [PriceDate] DESC
      `);
    return result.recordset[0];
  } catch (err) {
    console.error("โ ูุดู ุฌูุจ ุงููุคุดุฑุงุช ูู PriceHistory:", err);
    return null;
  }
}

// ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ: ุชุนูุฏ ุงููุคุดุฑุงุช ุงููููุฉ ุงูุฌุงูุฒุฉ ูุงูุชูุตูุฉ
async function analyzeStock(symbol) {
  try {
    // ุฌูุจ ุขุฎุฑ ุตู (ุฃุญุฏุซ ููู) ูู PriceHistory
    const last = await getLatestIndicators(symbol);
    if (!last) {
      return { error: 'ูุง ุชูุฌุฏ ุจูุงูุงุช ูุงููุฉ ููุชุญููู', symbol };
    }

    // ุงููุคุดุฑุงุช ูุฌุจ ุฃู ุชููู ูุฎุฒูุฉ ูู ุงูุฃุนูุฏุฉ ุงูุชุงููุฉ (ุชุฃูุฏ ูู ูุฌูุฏูุง ูู ุงูุฌุฏูู):
    // RSI, MACD, MACDSignal, SMA20, EMA50, BB_Middle, BB_Upper, BB_Lower
    const lastPrice = last.ClosePrice;
    const lastRSI = last.RSI;
    const lastMACD = { MACD: last.MACD, signal: last.MACDSignal, histogram: last.MACDHist };
    const lastBB = { middle: last.BB_Middle, upper: last.BB_Upper, lower: last.BB_Lower };
    const lastVolume = last.Volume;
    const sma20 = last.SMA20;
    const ema50 = last.EMA50;

    // ููุทู ุงูุชูุตูุฉ ุจูุงุกู ุนูู ุงููุคุดุฑุงุช
    let suggestion = 'ุชุญููู ููุท';
    let confidence = 50;
    if (lastRSI < 30 && lastMACD?.MACD > lastMACD?.signal && lastPrice < lastBB.lower) {
      suggestion = '๐ ูุฑุตุฉ ุดุฑุงุก ูููุฉ';
      confidence = 90;
    } else if (lastRSI > 70) {
      suggestion = '๐ ุงุญุชูุงููุฉ ุชุตุญูุญ';
      confidence = 70;
    }

    // ุฅุฑุฌุงุน ุงููุชุงุฆุฌ ุงูููุงุฆูุฉ
    return {
      symbol,
      lastPrice,
      rsi: lastRSI,
      macd: lastMACD,
      sma20,
      ema50,
      bollinger: lastBB,
      volume: lastVolume,
      suggestion,
      confidence,
    };
  } catch (err) {
    console.error("โ ูุดู ุงูุชุญููู ุงูููู (ูุฑุงุกุฉ ูู ุงููุงุนุฏุฉ):", err);
    return { error: 'ูุดู ุงูุชุญููู ุงูููู', symbol };
  }
}

module.exports = analyzeStock;